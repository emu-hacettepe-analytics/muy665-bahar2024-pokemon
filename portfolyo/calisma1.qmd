---
title: "Çalışma 1"
---

## (a)

`{r} 1 + 1}`

## (b)

```{r}
# Özel Özet Fonksiyonu
custom_summary <- function(vec) {
  summary_list <- list(
    Ortalama = mean(vec),
    Medyan = median(vec),
    Standart_Sapma = sd(vec),
    Minimum = min(vec),
    Maksimum = max(vec)
  )
  return(summary_list)
}

# mtcars veri setini yükleyelim
#data(mtcars)

# mtcars veri setini yükle
data(mtcars)

# Veri setinin sayısal sütunlarını al
numeric_cols <- sapply(mtcars, is.numeric)

# Her bir sayısal sütun için custom_summary fonksiyonunu uygula ve sonuçları yan yana yazdır
for (col in names(mtcars)[numeric_cols]) {
  summary <- custom_summary(mtcars[[col]])
  cat("Araba Özellikleri:", col, "\n")
  cat("Ortalama:", summary$Ortalama, "\t \t")
  cat("Medyan:", summary$Medyan, "\t \t")
  cat("Standart Sapma:", round (summary$Standart_Sapma, digits = 2), "\t \t")
  cat("Minimum:", summary$Minimum, "\t \t")
  cat("Maksimum:", summary$Maksimum, "\n")
  
  cat("------------------------------------------------------------------------------------------------------------","\n")
}



```

## (c)

```{r}
# dslabs paketini yükleyelim
#install.packages("dslabs")
library(dslabs)

# na_example veri setini yükleyelim
data("na_example")

# Veri setinin içeriğini gösterelim (NA değerleri dahil)
na_example

# NA değerlerinin toplam sayısını bulalım
na_count <- sum(is.na(na_example))
na_count

# NA değerlerini 665 ile değiştirelim
updated_na_example <- na_example
updated_na_example[is.na(updated_na_example)] <- 665

# Güncellenmiş veri setini kontrol edelim (NA değerleri olmadan)
updated_na_example

# Güncellenmiş veri setindeki NA değerlerinin toplam sayısı
updated_na_count <- sum(is.na(updated_na_example))
updated_na_count

# Güncellenmiş veri setinde 665 numarasının kaç kez yer aldığını bulalım
num_665 <- sum(updated_na_example == 665)
num_665
```
