---
title: "Proje - İstanbul Deprem Senaryosu"
number-sections: true

format:
  html:
    code-fold: true
    code-summary: "Show the code"
---

**Proje sayfamıza hoş geldiniz. Biz Pokemon'lar olarak sizlere bir analiz yaptık.. Şöyle ki;**

# Proje Genel Bakış ve Kapsamı 📑

# Veri 📉

```{r message=FALSE}
    library(dplyr)
    library(readr)
    library(knitr)
    library(ggplot2)
    library(leaflet)
    library(readxl)
    library(gridExtra)
    deprem_analiz <- read_excel("deprem.xlsx")
    deprem_analiz <- data.frame(lapply(deprem_analiz, function(v) {
      if (is.character(v)) return(toupper(v))
      else return(v)
    }))
    
    colnames(deprem_analiz)[1:4] <- c("id", "ilce_adi", "mahalle_adi", "mahalle_kodu")
    district_sum <- deprem_analiz %>% group_by(ilce_adi) %>% summarise(
    total_cok_agir_hasarli = sum(cok_agir_hasarli_bina_sayisi),
                                                                  total_agir_hasarli = sum(agir_hasarli_bina_sayisi),
                                                                  total_orta_hasarli = sum(orta_hasarli_bina_sayisi),
                                                                  total_hafif_hasarli = sum(hafif_hasarli_bina_sayisi),
                                                                  total_can_kaybi = sum(can_kaybi_sayisi),
                                                                  total_agir_yarali = sum(agir_yarali_sayisi),
                                                                  total_hafif_yarali = sum(hafif_yarali_sayisi),
                                                                  .groups = 'drop')
    
district_sum <- data.frame(district_sum)

    district_avg <- deprem_analiz %>% group_by(ilce_adi) %>% summarise(
                                                                  avg_cok_agir_hasarli = mean(cok_agir_hasarli_bina_sayisi),
                                                                  avg_agir_hasarli = mean(agir_hasarli_bina_sayisi),
                                                                  avg_orta_hasarli = mean(orta_hasarli_bina_sayisi),
                                                                  avg_hafif_hasarli = mean(hafif_hasarli_bina_sayisi),
                                                                  avg_can_kaybi = mean(can_kaybi_sayisi),
                                                                  avg_agir_yarali = mean(agir_yarali_sayisi),
                                                                  avg_hafif_yarali = mean(hafif_yarali_sayisi),
                                                                 .groups = 'drop')
    district_avg$ilce_adi <- factor(district_avg$ilce_adi, levels = unique(district_avg$ilce_adi))
    
    kable(head(district_avg, 50))


```

## Veri Kaynağı

Veri için kullanılan kaynağa aşağıdaki linkten erişebilirsiniz;

[İstanbul Deprem Senaryosu Verileri](https://data.ibb.gov.tr/dataset/deprem-senaryosu-analiz-sonuclari)

## Veri Hakkında Genel Bilgiler

eklenecek

## Tercih Sebebi

eklenecek

# Analiz

```{r message=FALSE}
library(readxl)
library(stringi)
library(stringr)
library(ggplot2)
library(ggthemes)

avg_health1 <- ggplot(district_avg, aes(x = ilce_adi)) +
  geom_line(aes(y = avg_can_kaybi, group = 1, color = "Can Kaybı"), size = 1) +
  geom_line(aes(y = avg_agir_yarali, group = 1, color = "Ağır Yaralı"), size = 1) +
  geom_line(aes(y = avg_hafif_yarali, group = 1, color = "Hafif Yaralı" ), size = 1) +
  guides(color = guide_legend(title = NULL)) +
  ylab("Yaralanmalar ve Can Kayıpları") +
  xlab("İlçe Adı") +
  ggtitle("Deprem Hasar Analizi: İlçe Bazında Ortalama Değerler") +
  theme_base() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
        plot.title = element_text(color = "black", size = 14, face = "bold", hjust = 0.5, vjust = 1.5),
        legend.position = "bottom",
        axis.title = element_text(color = "black", size = 12, face = "italic"),
        axis.text = element_text(color = "black", size = 8),
        legend.text = element_text(color = "black", size = 10)) +
  scale_color_manual(values = c("Can Kaybı" = "red", "Ağır Yaralı" = "blue", "Hafif Yaralı" = "darkgreen"))



```

## Keşifsel Veri Analizi

```{r message=FALSE}

avg_health1
```

✔️Yukarıdaki verilerde, her ilçenin bir felaket anında kaç kişinin öleceğini veya yaralanacağını görebiliyoruz. En yüksek değerlere sahip olan ilçelere odaklanıyoruz ve bu ilçelerin en yüksek değeri almasının nedenini anlamaya çalışıyoruz. Acaba bu ilçeler gerçekten tehlikeli mi, yoksa sadece büyük bir nüfusa mı sahipler? Aşağıdaki grafiklerde ise bu sorunun cevabını ararken nüfusu da dikkate alacağız.

## İlçelere Göre Depremin Etkisi ❗

```{r message=FALSE}
library(ggthemes)

building_avg_line <- ggplot(district_avg, aes(x = ilce_adi)) +
  geom_line(aes(y = avg_cok_agir_hasarli, group = 1, color = "Çok Ağır Hasarlı"),size = 1) +
  geom_line(aes(y = avg_agir_hasarli, group = 1, color = "Ağır Hasarlı"),size = 1) +
  geom_line(aes(y = avg_orta_hasarli, group = 1, color = "Orta Hasarlı"),size = 1) +
  geom_line(aes(y = avg_hafif_hasarli, group = 1, color = "Hafif Hasarlı"),size = 1) +
  guides(color = guide_legend(title = NULL))+
  ylab("Ortalama Bina Sayısı") +
  xlab("İlçe Adı") +
  ggtitle("Deprem Hasar Analizi İlçe Bazında Ortalamalar") +  
  theme_base() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),  
        legend.text = element_text(size = 8),
        legend.position = "bottom",
        plot.title = element_text(color = "black", size = 16, face = "bold", hjust = 0.5, vjust = 1.5),
        axis.title = element_text(color = "black", size = 12, face = "italic"),
        axis.text = element_text(color = "black", size = 8)) +
  scale_color_manual(values = c("Çok Ağır Hasarlı" = "darkred", "Ağır Hasarlı" = "purple", "Orta Hasarlı" = "darkblue", "Hafif Hasarlı" = "darkgreen"))

building_avg_line

```

Bu grafik, her ilçenin ortalama bina sayısını ve hasar gören binaların sınıflandırmasını göstermektedir. Önceki grafikle benzerlik göstermektedir, bu da **ölümler ile hasarlı bina sayısı arasında bir ilişki olabileceğini düşündürmektedir.**

```{r message=FALSE}

library(readxl)
library(dplyr)
library(ggplot2)
library(ggthemes)

nufus_excel <- read_excel("Veri-2.xlsx") %>% 
  select(ilce, nüfus_sayısı, toplam_can_kaybı) %>%
  mutate(can_kaybı_nüfus = (toplam_can_kaybı / nüfus_sayısı) * 1000)  

ggplot(nufus_excel, aes(x = ilce, y = toplam_can_kaybı)) +
  geom_point(aes(size = nüfus_sayısı, color = cut(can_kaybı_nüfus, breaks = c(0, 0.7, 2, 5), labels = c("Least Dangerous", "Medium Dangerous", "High Dangerous")))) +
  scale_color_manual(values = c("High Dangerous" = "darkred", "Medium Dangerous" = "darkblue", "Least Dangerous" = "darkgreen")) +
  theme_base() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, size = 8), 
        legend.position = "none",
        axis.title.x = element_text(size = 12, face = "italic"),  # x ekseni başlığı boyutu
        axis.title.y = element_text(size = 12, face = "italic")) +  # y ekseni başlığı boyutu
  xlab("Semt") +
  ylab("Ölüm Sayısı") +
  scale_y_continuous(limits = c(0, max(nufus_excel$toplam_can_kaybı) * 1.1)) +
  scale_size_continuous(range = c(2, 6), guide = FALSE) +
  guides(size = guide_legend(override.aes = list(color = "darkred")))
```

📍 Noktaların alanı bize ilçenin nüfus büyüklüğünü gösterir ve renkler, her ilçenin tehlike seviyelerini belirlenen eşik değerlere dayanarak gösterir.

📍Bu alanda gerçekleşme ihtimali olan ölümlerin nüfus ile ilişkisi gösterilmektedir.

📍Eğer ölümler diğerlerine göre nispeten küçük nüfusa sahipse bile yüksekse, bu ilçenin yüksek tehlikeli bir bölge olduğunu söyleyebiliriz. Eğer nüfus büyükse ve ölümler nispeten azsa, bu bölgenin diğerlerinden daha güvenli olduğunu varsayabiliriz.

## Sonuçlar

# Sonuçlar ve Ana Çıkarımlar
